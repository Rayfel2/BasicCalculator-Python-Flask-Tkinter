name: CI/CD Workflow (BasicTkinterCalculator)  # Nombre del flujo de trabajo de CI/CD

on:  # Define cuándo se ejecuta este flujo de trabajo
  pull_request:  # Se ejecuta cuando se crea o actualiza un pull request
    branches:
      - qa  # Solo se ejecutará cuando el pull request sea hacia la rama 'qa'

jobs:
  build:  # Nombre del trabajo, en este caso 'build'
    runs-on: ubuntu-latest  # Se ejecutará en un entorno de máquina virtual de Ubuntu más reciente

    steps:  # Lista de pasos que se ejecutarán dentro de este trabajo
      - name: Checkout code  # Nombre del paso para descargar el código fuente
        uses: actions/checkout@v2  # Acción para descargar el código fuente del repositorio

      - name: Set up Python  # Configura Python en la VM
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Versión de Python que se va a instalar (en este caso, 3.8)

      - name: Install dependencies  # Instalar dependencias
        run: |
          python -m pip install --upgrade pip  # Actualiza 'pip'
          pip install Flask  # Instala Flask para la app web
          pip install pyinstaller  # Instala PyInstaller para empaquetar la app

      - name: Run Xvfb and unit tests  # Ejecutar Xvfb y las pruebas unitarias
        run: |
          Xvfb :99 -screen 0 1024x768x24 &
          export DISPLAY=:99
          python -m unittest discover  # Ejecuta todas las pruebas unitarias en el directorio
        continue-on-error: false

      - name: Upload test results on failure  # Manejo de fallos en las pruebas
        if: failure()  # Solo se ejecuta si las pruebas fallan
        run: |
          echo "Las pruebas fallaron. Subiendo los resultados..."  # Mensaje de fallo en pruebas
          # Aquí se puede agregar lógica para subir los resultados a un servicio externo o generar un reporte

      - name: Build executable  # Empaquetar la aplicación en un ejecutable usando PyInstaller
        run: |
          pyinstaller --onefile TkinterCalculadora.py  # Empaqueta el archivo TkinterCalculadora.py en un ejecutable
        if: success()  # Solo se ejecuta si los pasos anteriores fueron exitosos

      - name: Upload executable  # Subir el ejecutable como artefacto para descargar
        uses: actions/upload-artifact@v3
        with:
          name: calculator-executable
          path: dist/TkinterCalculadora  # Ruta al ejecutable generado por PyInstaller
        if: success()  # Solo se ejecuta si el empaquetado fue exitoso

  deploy:  # Trabajo para manejar el despliegue
    runs-on: ubuntu-latest
    needs: build  # Este trabajo solo se ejecutará si el trabajo 'build' tuvo éxito
    steps:
      - name: Notify success  # Notifica si el despliegue fue exitoso
        run: echo "La aplicación se ha desplegado correctamente."
